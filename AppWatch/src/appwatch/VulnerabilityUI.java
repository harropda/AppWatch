/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appwatch;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

/**
 * The Vulnerability Details page shows the entire text of the Description
 * returned by Shodan.  This is often too large to display on a table row.
 * @author David Harrop
 */
public class VulnerabilityUI extends javax.swing.JDialog {
    private final String source;
    private final String cveID;
    private final String desc;
    private final String cveURL;

    /**
     * Creates new form vulnerabilityUI
     * @param parent calling JDialog, this dialog to be displayed in front of
     * @param modal the 'in front of ' flag
     * @param source the source of the Vulnerability detail
     * @param cveID the CVE ID(s) associated with the Vulnerability
     * @param desc the full text of the Vulnerability description
     * @param cveURL the http address of the CVE Vulnerability page
     * @throws javax.swing.text.BadLocationException
     *  Catches errors in writing the URL to the Editor field
     * @throws java.io.IOException
     *  Catches errors reading the file system
     */
    public VulnerabilityUI(java.awt.Frame parent, boolean modal, String source, String cveID, String desc, String cveURL) throws BadLocationException, IOException {
        super(parent, modal);
        initComponents();
        this.source = source;
        this.cveID = cveID;
        this.desc = desc;
        this.cveURL = cveURL;
        
        sourceLabel.setText(this.source);
        cveIDLabel.setText(this.cveID);
        descPane.setText(this.desc);
        cveURLEPane.setEditable(false);
        /** 
         * in order to display a click-able URL we must use a JEditorPane (as this
         * takes rich text).  We use an editor kit to create the <html> code for
         * the URL and add a listener to react if the user clicks it.
         */
        HTMLDocument doc = (HTMLDocument)cveURLEPane.getDocument();
        HTMLEditorKit eKit = (HTMLEditorKit)cveURLEPane.getEditorKit();        
        String text = "<a href=\"" + cveURL + "\">" + cveURL + "</a>";
        System.out.println("cveURL: " + text);
        eKit.insertHTML(doc, doc.getLength(), text, 0, 0, null);

        cveURLEPane.addHyperlinkListener(new HyperlinkListener() {
        @Override
        public void hyperlinkUpdate(HyperlinkEvent e) {
            if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
               if(Desktop.isDesktopSupported()) {
                   try {
                       Desktop.getDesktop().browse(e.getURL().toURI());
                   } catch (URISyntaxException | IOException ex) {
                       Logger.getLogger(VulnerabilityUI.class.getName()).log(Level.SEVERE, null, ex);
                   }
                }
            }
        }
        });         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourceLabel = new javax.swing.JLabel();
        cveIDLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cveURLEPane = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        descPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sourceLabel.setText("<source>");

        cveIDLabel.setText("<CVE ID>");

        jScrollPane2.setBorder(null);
        jScrollPane2.setForeground(new java.awt.Color(0, 0, 255));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        cveURLEPane.setEditable(false);
        cveURLEPane.setBackground(new java.awt.Color(240, 240, 240));
        cveURLEPane.setBorder(null);
        cveURLEPane.setContentType("text/html"); // NOI18N
        cveURLEPane.setForeground(new java.awt.Color(0, 51, 255));
        cveURLEPane.setText("");
        jScrollPane2.setViewportView(cveURLEPane);

        jScrollPane1.setViewportView(descPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sourceLabel)
                        .addGap(130, 130, 130)
                        .addComponent(cveIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sourceLabel)
                        .addComponent(cveIDLabel))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VulnerabilityUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VulnerabilityUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VulnerabilityUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VulnerabilityUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VulnerabilityUI dialog;
                try {
                    dialog = new VulnerabilityUI(new javax.swing.JFrame(), true, "", "", "", "");
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (BadLocationException | IOException ex) {
                    Logger.getLogger(VulnerabilityUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cveIDLabel;
    private javax.swing.JEditorPane cveURLEPane;
    private javax.swing.JTextPane descPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel sourceLabel;
    // End of variables declaration//GEN-END:variables
}
